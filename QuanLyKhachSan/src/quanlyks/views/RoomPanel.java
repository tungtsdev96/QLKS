package quanlyks.views;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.write.WriteException;
import quanlyks.controller.ExportFile;
import quanlyks.controller.IconManager;
import quanlyks.controller.RoomController;
import quanlyks.model.Room;
import static quanlyks.views.CustomerPanel.tbCustomer;

/**
 *
 * @author Tuyen Ti Ton
 */
public class RoomPanel extends javax.swing.JPanel {

    private RoomController roomController = new RoomController();
    private ArrayList<Room> arrRoom = new ArrayList<>();
    private IconManager icon = new IconManager();
    private boolean checkSearch = false;

    /**
     * Creates new form StaffPanel
     */
    public RoomPanel() {
        initComponents();
        arrRoom = roomController.getListRooms();
        bindingRoomTable(arrRoom);
        getAnalysisRoom(roomController);
        if (MainScreen.type == 2) {
            btnAddRoom.setEnabled(false);
            btnDelete.setEnabled(false);
            btnEditRoom.setEnabled(false);
        }
        edtSearch.addKeyListener(new KeyAdapter() {
            public void keyPressed(KeyEvent evt) {
                int keyEvent = evt.getKeyCode();
                if (keyEvent == KeyEvent.VK_ENTER) {
                    // thực hiện hàm tìm kiếm
                    String key = edtSearch.getText();
                    searchRoom(key);
                }
            }
        });
    }

    public void getAnalysisRoom(RoomController roomController) {
        StringBuilder builder = new StringBuilder();
        int vipRoom = roomController.getNumberRoomType("Phòng VIP");
        int singleRoom = roomController.getNumberRoomType("Phòng đơn");
        int doubleRoom = roomController.getNumberRoomType("Phòng đôi");
        int hallRoom = roomController.getNumberRoomType("Phòng hội nghị");
        int empty = roomController.getNumberRoomStatus("Đang trống");
        int hired = roomController.getNumberRoomStatus("Đang thuê");
        int ordered = roomController.getNumberRoomStatus("Đang đặt");
        int repair = roomController.getNumberRoomStatus("Đang sửa chữa");
        builder.append(" Phòng đơn: ").append(singleRoom).append("\n");
        builder.append(" Phòng đôi: ").append(doubleRoom).append("\n");
        builder.append(" Phòng VIP: ").append(vipRoom).append("\n");
        builder.append(" Phòng hội nghị: ").append(hallRoom).append("\n");
        builder.append("-------------------------------------").append("\n");
        builder.append(" Đang trống: ").append(empty).append("\n");
        builder.append(" Đang thuê: ").append(hired).append("\n");
        builder.append(" Đang đặt: ").append(ordered).append("\n");
        builder.append(" Đang sửa chữa: ").append(repair).append("\n");
        txtAnalysis.setText(builder.toString());
    }

    private void searchRoom(String key) {
        arrRoom = roomController.searchRoom(key);
        if (arrRoom.size() != 0) {
            bindingRoomTable(arrRoom);
            btnSearch.setIcon(icon.iconBack());
            checkSearch = true;
        } else {
            JOptionPane.showMessageDialog(this, "Không có kết quả phù hợp", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, icon.iconError());
            btnSearch.setIcon(icon.iconSearch());
            checkSearch = false;
        }
    }

    public static void bindingRoomTable(ArrayList<Room> arrRoom) {
        DefaultTableModel model = (DefaultTableModel) tbRoom.getModel();
        model.setRowCount(0);
        for (int i = 0; i < arrRoom.size(); i++) {
            model.addRow(new Object[]{
                arrRoom.get(i).getIdRoom(),
                arrRoom.get(i).getRoomType(),
                arrRoom.get(i).getRoomStatus(),
                arrRoom.get(i).getMaxOccupancy(),
                arrRoom.get(i).getPriceOfRoom()
            });
        }
        tbRoom.setModel(model);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbRoom = new javax.swing.JTable();
        btnAddRoom = new javax.swing.JButton();
        btnEditRoom = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnPrintList = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAnalysis = new javax.swing.JTextArea();
        btnViewDetail = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        edtSearch = new javax.swing.JTextField();
        btnSearch = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1022, 525));

        tbRoom.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbRoom.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbRoom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Loại phòng", "Tình trạng", "Số khách tối đa", "Giá phòng (VND)"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbRoom.setRowHeight(25);
        tbRoom.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbRoom.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbRoomMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbRoom);
        if (tbRoom.getColumnModel().getColumnCount() > 0) {
            tbRoom.getColumnModel().getColumn(0).setResizable(false);
            tbRoom.getColumnModel().getColumn(0).setPreferredWidth(80);
            tbRoom.getColumnModel().getColumn(1).setResizable(false);
            tbRoom.getColumnModel().getColumn(1).setPreferredWidth(100);
            tbRoom.getColumnModel().getColumn(2).setResizable(false);
            tbRoom.getColumnModel().getColumn(2).setPreferredWidth(100);
            tbRoom.getColumnModel().getColumn(3).setResizable(false);
            tbRoom.getColumnModel().getColumn(4).setResizable(false);
        }

        btnAddRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnAddRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnAddRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnAddRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/add_white.png"))); // NOI18N
        btnAddRoom.setText("Thêm");
        btnAddRoom.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnAddRoom.setIconTextGap(15);
        btnAddRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRoomActionPerformed(evt);
            }
        });

        btnEditRoom.setBackground(new java.awt.Color(0, 153, 255));
        btnEditRoom.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEditRoom.setForeground(new java.awt.Color(255, 255, 255));
        btnEditRoom.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/edit_white.png"))); // NOI18N
        btnEditRoom.setText("Chỉnh sửa");
        btnEditRoom.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnEditRoom.setIconTextGap(15);
        btnEditRoom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditRoomActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(0, 153, 255));
        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnDelete.setForeground(new java.awt.Color(255, 255, 255));
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/delete_white.png"))); // NOI18N
        btnDelete.setText("Xóa");
        btnDelete.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnDelete.setIconTextGap(15);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnPrintList.setBackground(new java.awt.Color(0, 153, 255));
        btnPrintList.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPrintList.setForeground(new java.awt.Color(255, 255, 255));
        btnPrintList.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/printer_white.png"))); // NOI18N
        btnPrintList.setText("In danh sách");
        btnPrintList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnPrintList.setIconTextGap(15);
        btnPrintList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintListActionPerformed(evt);
            }
        });

        txtAnalysis.setEditable(false);
        txtAnalysis.setColumns(5);
        txtAnalysis.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAnalysis.setRows(5);
        jScrollPane2.setViewportView(txtAnalysis);

        btnViewDetail.setBackground(new java.awt.Color(0, 153, 255));
        btnViewDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnViewDetail.setForeground(new java.awt.Color(255, 255, 255));
        btnViewDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/view_white.png"))); // NOI18N
        btnViewDetail.setText("Xem chi tiết");
        btnViewDetail.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnViewDetail.setIconTextGap(15);
        btnViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDetailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Tìm kiếm");

        edtSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/search_black.png"))); // NOI18N
        btnSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(edtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnSearch))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnPrintList, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btnEditRoom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAddRoom, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnViewDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSearch, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(edtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnEditRoom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrintList, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbRoomMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbRoomMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tbRoomMouseClicked

    private void btnAddRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRoomActionPerformed
        // TODO add your handling code here:
        RoomInfor roomInfo = new RoomInfor(this);
        roomInfo.setExtendedState(JFrame.MAXIMIZED_BOTH);
        roomInfo.setVisible(true);
        roomInfo.pack();
        roomInfo.setLocationRelativeTo(null);
        roomInfo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btnAddRoomActionPerformed

    private void btnViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDetailActionPerformed
        // TODO add your handling code here:
        //arrRoom = new ArrayList<>();
        int row = tbRoom.getSelectedRow();
        if (row != -1) {
            Room room = new Room();
            if (checkSearch == true) {
                room = arrRoom.get(row);
            } else {
                arrRoom = roomController.getListRooms();
                room = arrRoom.get(row);
            }
            RoomInfor roomInfo = new RoomInfor(this, room, 1);
            roomInfo.setExtendedState(JFrame.MAXIMIZED_BOTH);
            roomInfo.setVisible(true);
            roomInfo.pack();
            roomInfo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            roomInfo.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btnViewDetailActionPerformed

    private void btnEditRoomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditRoomActionPerformed
        // TODO add your handling code here:
        //arrRoom = new ArrayList<>();
        arrRoom = roomController.getListRooms();
        int row = tbRoom.getSelectedRow();
        if (row != -1) {
            Room room = arrRoom.get(row);
            RoomInfor roomInfo = new RoomInfor(this, room, 2);
            roomInfo.setExtendedState(JFrame.MAXIMIZED_BOTH);
            roomInfo.setVisible(true);
            roomInfo.pack();
            roomInfo.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            roomInfo.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btnEditRoomActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //arrRoom = new ArrayList<>();
        arrRoom = roomController.getListRooms();
        int row = tbRoom.getSelectedRow();
        if (row != -1) {
            int idRoom = Integer.parseInt(tbRoom.getValueAt(row, 0).toString());
            int output = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa phòng " + idRoom + "?", "Xóa phòng", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon.iconDelete());
            if (output == JOptionPane.YES_OPTION) {
                if (roomController.changeRoomStatus(idRoom, "Đã xóa")) {
                    arrRoom = roomController.getListRooms();
                    bindingRoomTable(arrRoom);
                    getAnalysisRoom(roomController);
                    JOptionPane.showMessageDialog(this, "Xóa thành công", "Xóa", JOptionPane.INFORMATION_MESSAGE, icon.iconDone());
                } else {
                    JOptionPane.showMessageDialog(this, "Chưa xóa được", "Lỗi", JOptionPane.ERROR_MESSAGE, icon.iconError());
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSearchMouseClicked
        // TODO add your handling code here:
        String key = edtSearch.getText();
        if (checkSearch == false) {
            searchRoom(key);
        } else {
            arrRoom = roomController.getListRooms();
            bindingRoomTable(arrRoom);
            btnSearch.setIcon(icon.iconSearch());
            checkSearch = false;
        }

    }//GEN-LAST:event_btnSearchMouseClicked

    private void btnPrintListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintListActionPerformed
        // TODO add your handling code here: 
        try {
            ExportFile exp = new ExportFile();
            File file = new File("Xls\\" + MainScreen.getCurrentDateTime() + ".xls");
            exp.printTable(tbRoom, file);
            int output = JOptionPane.showConfirmDialog(this, "Mở danh sách", "Danh sách", JOptionPane.YES_NO_OPTION);
            if (output == JOptionPane.YES_OPTION) {
                try {
                    Desktop.getDesktop().open(file);
                } catch (IOException ex) {
                    Logger.getLogger(RoomPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (WriteException ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnPrintListActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddRoom;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEditRoom;
    private javax.swing.JButton btnPrintList;
    private javax.swing.JLabel btnSearch;
    private javax.swing.JButton btnViewDetail;
    private javax.swing.JTextField edtSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    public static javax.swing.JTable tbRoom;
    public javax.swing.JTextArea txtAnalysis;
    // End of variables declaration//GEN-END:variables
}
