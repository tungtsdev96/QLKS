package quanlyks.views;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import java.awt.Desktop;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import jxl.write.WriteException;
import quanlyks.controller.ExportFile;
import quanlyks.controller.IconManager;
import quanlyks.controller.ServiceController;
import quanlyks.model.Service;

/**
 *
 * @author Tuyen Ti Ton
 */
public class ServicePanel extends javax.swing.JPanel {

    public static ServiceController serviceController = new ServiceController();
    private ArrayList<Service> arrService = new ArrayList<>();
    private IconManager icon = new IconManager();
    private boolean checkSearch = false;

    /**
     * Creates new form StaffPanel
     */
    public ServicePanel() {
        initComponents();
        arrService = serviceController.getListServices();
        bindingServiceTable(arrService);
        analysisService();
        if (MainScreen.type == 2) {
            btAddService.setEnabled(false);
            btDeleteService.setEnabled(false);
            btEditInformationOfService.setEnabled(false);
        }
        tfSearch.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                int keyEvent = e.getKeyCode();
                if (keyEvent == KeyEvent.VK_ENTER) {
                    // thực hiện hàm tìm kiếm
                    String key = tfSearch.getText();
                    searchService(key);
                }
            }

        });

    }

    public static void analysisService() {
        int number = serviceController.getNumberService();
        tareaAnalysis.setText("Tổng sô dịch vụ : " + number);
    }

    public void bindingServiceTable(ArrayList<Service> arrayService) {
        DefaultTableModel model = (DefaultTableModel) tbService.getModel();
        model.setRowCount(0);
        for (int i = 0; i < arrayService.size(); i++) {
            model.addRow(new Object[]{
                arrayService.get(i).getIdService(),
                arrayService.get(i).getNameService(),
                arrayService.get(i).getPriceOfService()
            });
        }

        tbService.setModel(model);
    }

    public void searchService(String key) {
        arrService = serviceController.searchServices(key);
        if (arrService.size() != 0) {
            bindingServiceTable(arrService);
            lbSearch.setIcon(icon.iconBack());
            checkSearch = true;
        } else {
            JOptionPane.showMessageDialog(this, "Không có kết quả phù hợp", "Tìm kiếm", JOptionPane.INFORMATION_MESSAGE, icon.iconError());
            lbSearch.setIcon(icon.iconSearch());
            checkSearch = false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tbService = new javax.swing.JTable();
        btAddService = new javax.swing.JButton();
        btEditInformationOfService = new javax.swing.JButton();
        btDeleteService = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tareaAnalysis = new javax.swing.JTextArea();
        btViewDetail = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfSearch = new javax.swing.JTextField();
        lbSearch = new javax.swing.JLabel();

        setPreferredSize(new java.awt.Dimension(1022, 525));

        tbService.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tbService.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbService.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã dịch vụ", "Tên dịch vụ", "Đơn giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbService.setRowHeight(25);
        tbService.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tbService.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbServiceMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbService);
        if (tbService.getColumnModel().getColumnCount() > 0) {
            tbService.getColumnModel().getColumn(0).setResizable(false);
            tbService.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbService.getColumnModel().getColumn(1).setResizable(false);
            tbService.getColumnModel().getColumn(1).setPreferredWidth(150);
            tbService.getColumnModel().getColumn(2).setResizable(false);
            tbService.getColumnModel().getColumn(2).setPreferredWidth(20);
        }

        btAddService.setBackground(new java.awt.Color(0, 153, 255));
        btAddService.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btAddService.setForeground(new java.awt.Color(255, 255, 255));
        btAddService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/add_white.png"))); // NOI18N
        btAddService.setText("Thêm");
        btAddService.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btAddService.setIconTextGap(15);
        btAddService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddServiceActionPerformed(evt);
            }
        });

        btEditInformationOfService.setBackground(new java.awt.Color(0, 153, 255));
        btEditInformationOfService.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btEditInformationOfService.setForeground(new java.awt.Color(255, 255, 255));
        btEditInformationOfService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/edit_white.png"))); // NOI18N
        btEditInformationOfService.setText("Chỉnh sửa");
        btEditInformationOfService.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btEditInformationOfService.setIconTextGap(15);
        btEditInformationOfService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEditInformationOfServiceActionPerformed(evt);
            }
        });

        btDeleteService.setBackground(new java.awt.Color(0, 153, 255));
        btDeleteService.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btDeleteService.setForeground(new java.awt.Color(255, 255, 255));
        btDeleteService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/delete_white.png"))); // NOI18N
        btDeleteService.setText("Xóa");
        btDeleteService.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btDeleteService.setIconTextGap(15);
        btDeleteService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteServiceActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(0, 153, 255));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/printer_white.png"))); // NOI18N
        jButton4.setText("In danh sách");
        jButton4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jButton4.setIconTextGap(15);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        tareaAnalysis.setEditable(false);
        tareaAnalysis.setColumns(20);
        tareaAnalysis.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tareaAnalysis.setLineWrap(true);
        tareaAnalysis.setRows(3);
        tareaAnalysis.setAutoscrolls(false);
        jScrollPane2.setViewportView(tareaAnalysis);

        btViewDetail.setBackground(new java.awt.Color(0, 153, 255));
        btViewDetail.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btViewDetail.setForeground(new java.awt.Color(255, 255, 255));
        btViewDetail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/view_white.png"))); // NOI18N
        btViewDetail.setText("Xem chi tiết");
        btViewDetail.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btViewDetail.setIconTextGap(15);
        btViewDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btViewDetailActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel1.setText("Tìm kiếm");

        tfSearch.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        lbSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quanlyks/images/search_black.png"))); // NOI18N
        lbSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lbSearchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btDeleteService, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btEditInformationOfService, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btAddService, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btViewDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbSearch)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbSearch))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btViewDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btAddService, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btEditInformationOfService, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btDeleteService, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tbServiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbServiceMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_tbServiceMouseClicked

    private void lbSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbSearchMouseClicked
        // TODO add your handling code here:
        String key = tfSearch.getText();
        if (!checkSearch) {
            searchService(key);
        } else {
            arrService = serviceController.getListServices();
            bindingServiceTable(arrService);
            lbSearch.setIcon(icon.iconSearch());
            checkSearch = false;
        }
    }//GEN-LAST:event_lbSearchMouseClicked

    private void btViewDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btViewDetailActionPerformed
        // TODO add your handling code here:
        int row = tbService.getSelectedRow();
        if (row != -1) {
            Service service = new Service();
            if (checkSearch) {
                service = arrService.get(row);
            } else {
                arrService = serviceController.getListServices();
                service = arrService.get(row);
            }
            ServiceInfor serviceInfor = new ServiceInfor(this, service, 1);
            serviceInfor.setVisible(true);
            serviceInfor.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            serviceInfor.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btViewDetailActionPerformed

    private void btAddServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddServiceActionPerformed
        // TODO add your handling code here:
        ServiceInfor serviceInfor = new ServiceInfor(this);
        serviceInfor.setVisible(true);
        serviceInfor.setLocationRelativeTo(null);
        serviceInfor.setResizable(false);
        serviceInfor.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }//GEN-LAST:event_btAddServiceActionPerformed

    private void btEditInformationOfServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEditInformationOfServiceActionPerformed
        // TODO add your handling code here:
        arrService = serviceController.getListServices();
        int row = tbService.getSelectedRow();
        if (row != -1) {
            Service service = arrService.get(row);
            ServiceInfor serviceInfor = new ServiceInfor(this, service, 2);
            serviceInfor.setVisible(true);
            serviceInfor.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
            serviceInfor.setLocationRelativeTo(null);
        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btEditInformationOfServiceActionPerformed

    private void btDeleteServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteServiceActionPerformed
        // TODO add your handling code here:
        arrService = serviceController.getListServices();
        int row = tbService.getSelectedRow();
        if (row != -1) {
            String idService = tbService.getValueAt(row, 0).toString();
            int output = JOptionPane.showConfirmDialog(this,
                    "Bạn có muốn xóa dịch vụ " + idService + "?", "Xóa dịch vụ",
                    JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, icon.iconDelete());
            if (output == JOptionPane.YES_OPTION) {
                boolean checkDelete = serviceController.deleteService(idService);
                if (checkDelete) {
                    arrService = serviceController.getListServices();
                    bindingServiceTable(arrService);
                    analysisService();
                    JOptionPane.showMessageDialog(this, "Xóa thành công", "Xóa", JOptionPane.INFORMATION_MESSAGE, icon.iconDone());
                } else {
                    JOptionPane.showMessageDialog(this, "Chưa xóa được", "Lỗi", JOptionPane.ERROR_MESSAGE, icon.iconError());
                }
            }

        } else {
            JOptionPane.showMessageDialog(this, "Chưa chọn mục nào!", "Trống", JOptionPane.ERROR_MESSAGE, icon.iconError());
        }
    }//GEN-LAST:event_btDeleteServiceActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        try {
            ExportFile exp = new ExportFile();
            File file = new File("Xls\\" + MainScreen.getCurrentDateTime() + ".xls");
            exp.printTable(tbService, file);
            int output = JOptionPane.showConfirmDialog(this, "Mở danh sách", "Danh sách", JOptionPane.YES_NO_OPTION);
            if (output == JOptionPane.YES_OPTION) {
                try {
                    Desktop.getDesktop().open(file);
                } catch (IOException ex) {
                    Logger.getLogger(RoomPanel.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (WriteException ex) {
            Logger.getLogger(CustomerPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAddService;
    private javax.swing.JButton btDeleteService;
    private javax.swing.JButton btEditInformationOfService;
    private javax.swing.JButton btViewDetail;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbSearch;
    public static javax.swing.JTextArea tareaAnalysis;
    private javax.swing.JTable tbService;
    private javax.swing.JTextField tfSearch;
    // End of variables declaration//GEN-END:variables
}
